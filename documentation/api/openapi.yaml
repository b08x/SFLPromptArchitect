openapi: 3.0.0
info:
  title: SFL Prompt Studio API
  version: 1.0.0
  description: Backend API for SFL Prompt Studio, enabling AI-driven workflow and prompt management
  contact:
    name: SFL Prompt Studio Support
    email: support@example.com

servers:
  - url: http://localhost:4000/api
    description: Local development server
  - url: https://api.sflprompt.studio/api
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token-based authentication. Include the token in the Authorization header as 'Bearer <token>'

  schemas:
    AIGenerationRequest:
      type: object
      required:
        - provider
        - model
        - prompt
      properties:
        provider:
          type: string
          enum: ['google', 'openai', 'openrouter']
          description: The AI provider to use for text generation
        model:
          type: string
          description: Specific model to use from the selected provider
        prompt:
          type: string
          description: The input prompt for text generation
        parameters:
          type: object
          properties:
            temperature:
              type: number
              minimum: 0
              maximum: 2
              description: Controls randomness of output
            maxTokens:
              type: integer
              description: Maximum number of tokens to generate
            topP:
              type: number
              description: Nucleus sampling parameter
        fallbackProviders:
          type: array
          items:
            type: string
          description: Optional list of fallback providers if primary provider fails

    AIGenerationResponse:
      type: object
      properties:
        text:
          type: string
          description: Generated text response
        providerUsed:
          type: string
          description: The actual provider that generated the response
        tokenUsage:
          type: object
          properties:
            inputTokens:
              type: integer
            outputTokens:
              type: integer
            totalTokens:
              type: integer
        processingTime:
          type: number
          description: Time taken to generate response in milliseconds

paths:
  /proxy/generate:
    post:
      summary: Generate text using multi-provider AI service
      description: Generates text using a specified or automatically selected AI provider
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIGenerationRequest'
      responses:
        '200':
          description: Successful text generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIGenerationResponse'
        '400':
          description: Bad request (invalid parameters)
        '401':
          description: Unauthorized (invalid JWT token)
        '429':
          description: Rate limit exceeded
        '500':
          description: Internal server error or all providers failed